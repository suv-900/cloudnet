trigger:
  branches:
    include:
    - 'main'
  paths:
    include:
    - application

pool: Default

stages:
- stage: DevBuild
  displayName: 'Dev Build App'
  jobs:
  - job:
    steps:
    - task: NodeTool@0
      inputs:
        versionSource: 'spec'
        versionSpec: '16.x'
      displayName: 'Install Nodejs'
    
    - script: |
        cd application
        npm install
        npm run build --if-present
        npm run test --if-present
      displayName: 'Npm install'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/application/'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
    
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop
    
    - task: DockerInstaller@0
      inputs:
        dockerVersion: '17.09.0-ce'
    - task: Docker@2
      inputs:
        containerRegistry: 'devacr_service_conn'
        repository: 'devsuvhamacr1.azurecr.io'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        buildContext: 'application/'
- stage: DevBuildImage
  jobs:
  - job:
    steps:
    - task: DockerInstaller@0
      inputs:
        dockerVersion: '17.09.0-ce'
    - task: Docker@2
      inputs:
        containerRegistry: 'devacr_service_conn'
        repository: 'devsuvhamacr1.azurecr.io'
        command: 'buildAndPush'
        Dockerfile: 'Dockerfile'
        buildContext: './application/'

- stage: DevAppDeploy
  displayName: 'Dev Deploy'
  dependsOn: DevBuild
  jobs:
  - deployment:
    displayName: 'Dev Deploy'
    environment: dev
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@5
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'suvham_paul@epam.com(a53670da-bf9b-4c7d-825a-7544c720e890)'
              appType: 'webAppLinux'
              WebAppName: 'dev-suvham-webapp1'
              packageForLinux: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              RuntimeStack: 'NODE|16-lts'
              StartupCommand: 'node app.js'
              DeploymentTypeLinux: 'oneDeploy'
    




